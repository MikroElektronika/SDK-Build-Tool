import os
import shutil
import subprocess
import urllib.request

card_packages = [
    'easymx_pro_v7_for_stm32_mcucard_with_stm32f107vct6',
    'easymx_pro_v7_for_stm32_mcucard_with_stm32f207vgt6',
    'easymx_pro_v7_for_stm32_mcucard_with_stm32f407vgt6',
    'easymx_pro_v7_for_stm32_mcucard_with_stm32f746vgt6',
    'easymx_pro_v7_for_tiva_mcu_card_with_tm4c123gh6pmi',
    'easymx_pro_v7_for_tiva_mcu_card_with_tm4c123gh6pzl',
    'easymx_pro_v7_for_tiva_mcu_card_with_tm4c129xnczad',
    'easypic_fusion_v7_eth_mcucard_with_pic32mx795f512l',
    'easypic_fusion_v7_eth_mcucard_with_pic32mz2048efh144',
    'easypic_fusion_v7_mcucard_with_dspic33ep512mu810',
    'easypic_fusion_v7_mcucard_with_dspic33fj256gp710a',
    'easypic_fusion_v7_mcucard_with_pic24ep512gu810',
    'easypic_fusion_v7_mcucard_with_pic24fj128ga310',
    'easypic_fusion_v7_mcucard_with_pic32mx460f512l',
    'easypic_pro_v7_mcucard_with_pic18f8520',
    'easypic_pro_v7_mcucard_with_pic18f8722',
    'easypic_pro_v7_mcucard_with_pic18f87j50',
    'easypic_pro_v7_mcucard_with_pic18f87j60_eth',
    'easypic_pro_v7_mcucard_with_pic18f87k22',
    'mcu_card_10_for_kinetis_mk60dn512vlq10',
    'mcu_card_10_for_pic_pic18f65k40',
    'mcu_card_10_for_pic_pic18f66k40',
    'mcu_card_10_for_pic_pic18f67k40',
    'mcu_card_10_for_stm32_stm32f107vc',
    'mcu_card_11_for_pic_pic18f55k42',
    'mcu_card_11_for_pic_pic18f56k42',
    'mcu_card_11_for_pic_pic18f57k42',
    'mcu_card_11_for_pic_pic18f57q43',
    'mcu_card_11_for_stm32_stm32f302vc',
    'mcu_card_11_for_stm32_stm32f303ve',
    'mcu_card_13_for_stm32_stm32f100ze',
    'mcu_card_13_for_stm32_stm32f101zg',
    'mcu_card_13_for_stm32_stm32l151zd',
    'mcu_card_13_for_stm32_stm32l152zd',
    'mcu_card_13_for_stm32_stm32l162ze',
    'mcu_card_13_for_stm32_stm32l4s5zi',
    'mcu_card_15_for_stm32_stm32f723ze',
    'mcu_card_16_for_stm32_stm32l432kc',
    'mcu_card_16_for_stm32_stm32l442kc',
    'mcu_card_17_for_stm32_stm32f407ig',
    'mcu_card_18_for_stm32_stm32l031c6',
    'mcu_card_18_for_stm32_stm32l041c6',
    'mcu_card_19_for_stm32_stm32f031c6',
    'mcu_card_22_for_stm32_stm32f373vc',
    'mcu_card_23_for_stm32_stm32f767bi',
    'mcu_card_24_for_stm32_stm32f722ve',
    'mcu_card_24_for_stm32_stm32h750vb',
    'mcu_card_26_for_stm32_stm32f469ii',
    'mcu_card_27_for_stm32_stm32f071vb',
    'mcu_card_28_for_stm32_stm32f732ie',
    'mcu_card_29_for_stm32_stm32f205rb',
    'mcu_card_29_for_stm32_stm32f215re',
    'mcu_card_29_for_stm32_stm32f401rb',
    'mcu_card_29_for_stm32_stm32f405rg',
    'mcu_card_29_for_stm32_stm32f411re',
    'mcu_card_29_for_stm32_stm32f412re',
    'mcu_card_29_for_stm32_stm32f413rh',
    'mcu_card_29_for_stm32_stm32f415rg',
    'mcu_card_29_for_stm32_stm32f423rh',
    'mcu_card_29_for_stm32_stm32f446re',
    'mcu_card_2_for_kinetis_mk20dn128vfm5',
    'mcu_card_2_for_kinetis_mk20dx128vfm5',
    'mcu_card_2_for_pic_pic18f85j10',
    'mcu_card_2_for_pic_pic18f85k22',
    'mcu_card_2_for_pic_pic18f85k90',
    'mcu_card_2_for_pic_pic18f86j10',
    'mcu_card_2_for_pic_pic18f86j11',
    'mcu_card_2_for_pic_pic18f86j15',
    'mcu_card_2_for_pic_pic18f86j16',
    'mcu_card_2_for_pic_pic18f86k22',
    'mcu_card_2_for_pic_pic18f86k90',
    'mcu_card_2_for_pic_pic18f87j10',
    'mcu_card_2_for_pic_pic18f87j11',
    'mcu_card_2_for_pic_pic18f87k22',
    'mcu_card_2_for_stm32_stm32f042k6',
    'mcu_card_2_for_tiva_tm4c123gh6pz',
    'mcu_card_31_for_stm32_stm32f745vg',
    'mcu_card_33_for_stm32_stm32f103rc',
    'mcu_card_3_for_kinetis_mkv58f1m0vlq24',
    'mcu_card_3_for_pic_pic18f96j65',
    'mcu_card_3_for_pic_pic18f97j60',
    'mcu_card_3_for_stm32_stm32f091rc',
    'mcu_card_3_for_stm32_stm32f303rc',
    'mcu_card_3_for_stm32_stm32l073rz',
    'mcu_card_3_for_stm32_stm32l152re',
    'mcu_card_3_for_stm32_stm32l4a6rg',
    'mcu_card_3_for_tiva_tm4c1294kcpdt',
    'mcu_card_3_for_tiva_tm4c1294ncpdt',
    'mcu_card_3_for_tiva_tm4c129ekcpdt',
    'mcu_card_3_for_tiva_tm4c129encpdt',
    'mcu_card_4_for_kinetis_mk51dn512clq10',
    'mcu_card_4_for_stm32_stm32f429ni',
    'mcu_card_5_for_kinetis_mkv42f128vlh16',
    'mcu_card_5_for_kinetis_mkv42f256vlh16',
    'mcu_card_5_for_kinetis_mkv42f64vlh16',
    'mcu_card_5_for_stm32_stm32l021k4',
    'mcu_card_6_for_stm32_stm32f042c6',
    'mcu_card_6_for_stm32_stm32l081cb',
    'mcu_card_7_for_pic_pic18f85j50',
    'mcu_card_7_for_pic_pic18f86j50',
    'mcu_card_7_for_pic_pic18f86j55',
    'mcu_card_7_for_pic_pic18f87j50',
    'mcu_card_7_for_stm32_stm32f030rc',
    'mcu_card_7_for_stm32_stm32f334r8',
    'mcu_card_8_for_stm32_stm32f410rb',
    'mcu_card_9_for_stm32_stm32f373rc',
    'mcu_card_for_kinetis_mk64fn1m0vdc12',
    'mcu_card_for_kinetis_mk64fx512vdc12',
    'mcu_card_for_pic32_pic32mx664f064l',
    'mcu_card_for_pic32_pic32mx675f256l',
    'mcu_card_for_pic32_pic32mx675f512l',
    'mcu_card_for_pic32_pic32mx695f512l',
    'mcu_card_for_pic32_pic32mx764f128l',
    'mcu_card_for_pic32_pic32mx795f512l',
    'mcu_card_for_pic_pic18f96j94',
    'mcu_card_for_pic_pic18f97j94',
    'mcu_card_for_stm32_stm32f207zg',
    'mcu_card_for_stm32_stm32f215zg',
    'mcu_card_for_stm32_stm32f217zg',
    'mcu_card_for_stm32_stm32f405zg',
    'mcu_card_for_stm32_stm32f407zg',
    'mcu_card_for_stm32_stm32f415zg',
    'mcu_card_for_stm32_stm32f417zg',
    'mcu_card_for_stm32_stm32f427zi',
    'mcu_card_for_stm32_stm32f429zi',
    'mcu_card_for_stm32_stm32f437zg',
    'mcu_card_for_stm32_stm32f439zg',
    'mcu_card_for_stm32_stm32f446ze',
    'mcu_card_for_stm32_stm32f745zg',
    'mcu_card_for_stm32_stm32f746zg',
    'mcu_card_for_stm32_stm32f756zg',
    'mcu_card_for_stm32_stm32f765zi',
    'mcu_card_for_stm32_stm32f767zg',
    'mcu_card_for_tiva_tm4c1294nczad',
    'mcu_card_for_tiva_tm4c1299kczad',
    'mcu_card_for_tiva_tm4c1299nczad',
    'mcu_card_for_tiva_tm4c129enczad',
    'mcu_card_for_tiva_tm4c129lnczad',
    'mcu_card_for_tiva_tm4c129xkczad',
    'mcu_card_for_tiva_tm4c129xnczad',
    'pim_for_dspic33ep256gp506',
    'pim_for_dspic33ep512mu810',
    'pim_for_pic24ep512gu810',
    'pim_for_pic24f16ka102',
    'pim_for_pic24f32ka304',
    'pim_for_pic24fj128ga310',
    'pim_for_pic24fj256ga110',
    'pim_for_pic24fj256gb110',
    'pim_for_pic24fj256gb210',
    'pim_for_pic24fj64ga004',
    'pim_for_pic24fj64gb004',
    'pim_for_pic32mx250f128d',
    'pim_for_pic32mx270f256d',
    'pim_for_pic32mx360f512l',
    'pim_for_pic32mx460f512l',
    'pim_for_pic32mx470f512l',
    'pim_for_pic32mx795f512l',
    'pim_for_pic32mz2048efh100',
    'sibrain_for_atmega1280',
    'sibrain_for_atmega2560',
    'sibrain_for_atmega3250',
    'sibrain_for_atmega6450',
    'sibrain_for_dspic33ep512mu814',
    'sibrain_for_dspic33fj256gp710a',
    'sibrain_for_gd32vf103vbt6',
    'sibrain_for_pic24ep512gu814',
    'sibrain_for_pic24hj256gp610',
    'sibrain_for_pic32mz1024efe144',
    'sibrain_for_pic32mz1024eff144',
    'sibrain_for_pic32mz1024efk144',
    'sibrain_for_pic32mz2048efh144'
]

board_packages = [
    'mikromedia_3_kinetis_capacitive',
    'mikromedia_3_kinetis_capacitive_fpi',
    'mikromedia_3_kinetis_resistive',
    'mikromedia_3_pic32mz_capacitive',
    'mikromedia_3_pic32mz_capacitive_fpi',
    'mikromedia_3_pic32mz_resistive',
    'mikromedia_3_pic32mz_resistive_fpi',
    'mikromedia_3_pic_capacitive',
    'mikromedia_3_pic_capacitive_fpi',
    'mikromedia_3_pic_resistive',
    'mikromedia_3_pic_resistive_fpi',
    'mikromedia_3_stm32f2_capacitive',
    'mikromedia_3_stm32f2_capacitive_fpi',
    'mikromedia_3_stm32f2_resistive',
    'mikromedia_3_stm32f4_capacitive',
    'mikromedia_3_stm32f4_capacitive_fpi',
    'mikromedia_3_stm32f4_resistive',
    'mikromedia_3_stm32f4_resistive_fpi',
    'mikromedia_4_kinetis_capacitive',
    'mikromedia_4_kinetis_capacitive_fpi',
    'mikromedia_4_kinetis_resistive',
    'mikromedia_4_kinetis_resistive_fpi',
    'mikromedia_4_pic32mz_capacitive',
    'mikromedia_4_pic32mz_capacitive_fpi',
    'mikromedia_4_pic32mz_resistive',
    'mikromedia_4_pic32mz_resistive_fpi',
    'mikromedia_4_stm32f2_capacitive_fpi',
    'mikromedia_4_stm32f2_resistive_fpi',
    'mikromedia_4_stm32f4_capacitive',
    'mikromedia_4_stm32f4_capacitive_fpi',
    'mikromedia_4_stm32f4_resistive',
    'mikromedia_4_stm32f4_resistive_fpi',
    'mikromedia_4_stm32f7_capacitive',
    'mikromedia_4_stm32f7_resistive',
    'mikromedia_5_kinetis_capacitive',
    'mikromedia_5_kinetis_capacitive_fpi',
    'mikromedia_5_kinetis_resistive',
    'mikromedia_5_kinetis_resistive_fpi',
    'mikromedia_5_pic32mz_capacitive',
    'mikromedia_5_pic32mz_capacitive_fpi',
    'mikromedia_5_pic32mz_resistive',
    'mikromedia_5_pic32mz_resistive_fpi',
    'mikromedia_5_stm32f4_capacitive',
    'mikromedia_5_stm32f4_capacitive_fpi',
    'mikromedia_5_stm32f4_resistive',
    'mikromedia_5_stm32f4_resistive_fpi',
    'mikromedia_5_stm32f7_capacitive',
    'mikromedia_5_stm32f7_capacitive_fpi',
    'mikromedia_5_stm32f7_resistive',
    'mikromedia_5_stm32f7_resistive_fpi',
    'mikromedia_7_capacitive',
    'mikromedia_7_resistive',
    'mikromedia_7_resistive_fpi',
    'mikromedia_7_stm32f4',
    'mikromedia_7_stm32f7',
    'mikromedia_for_dspic33',
    'mikromedia_for_dspic33ep',
    'mikromedia_for_pic18fj',
    'mikromedia_for_pic18fk',
    'mikromedia_for_pic24',
    'mikromedia_for_pic24ep',
    'mikromedia_for_pic32',
    'mikromedia_for_stm32_f3_f4',
    'mikromedia_for_tiva',
    'mikromedia_for_xmega',
    'mikromedia_plus_pic32mx7',
    'mikromedia_plus_stm32',
    'mikromedia_plus_stm32f7',
    'sparkfun_micromod_stm32_processor_board_with_stm32f405rg',
    'kit_discovery_with_stm32l4r9ai_mcu',
    'flip_and_click_pic32mz',
    'board_32_bit_multimedia',
    'board_arduino_mega_2560_rev3',
    'board_arduino_uno_rev3',
    'board_audio_development_for_pic32',
    'board_chipkit_max32',
    'board_chipkit_uc32',
    'board_chipkit_wf32_wifi',
    'board_curiosity_hpc',
    'board_curiosity_nano_with_pic18f47k42',
    'board_curiosity_nano_with_pic18f47q10',
    'board_curiosity_nano_with_pic18f57q43',
    'board_curiosity_pic24fj256ga7',
    'board_curiosity_pic32mx470',
    'board_curiosity_pic32_mz_ef',
    'board_digilent_cerebot_32mx7',
    'board_discovery_with_stm32c011f6',
    'board_discovery_with_stm32c031c6',
    'board_discovery_with_stm32f030r8',
    'board_discovery_with_stm32f051r8',
    'board_discovery_with_stm32f072rb',
    'board_discovery_with_stm32f100rb',
    'board_discovery_with_stm32f303vc',
    'board_discovery_with_stm32f334c8',
    'board_discovery_with_stm32f407vg',
    'board_discovery_with_stm32f411ve',
    'board_discovery_with_stm32f412zg',
    'board_discovery_with_stm32f413zh',
    'board_discovery_with_stm32f429zi',
    'board_discovery_with_stm32f469ni',
    'board_discovery_with_stm32f723ie',
    'board_discovery_with_stm32f746ng',
    'board_discovery_with_stm32f769ni',
    'board_discovery_with_stm32g031j6',
    'board_discovery_with_stm32g431cb',
    'board_discovery_with_stm32g474re',
    'board_discovery_with_stm32h750xb',
    'board_discovery_with_stm32l053c8',
    'board_discovery_with_stm32l072cz',
    'board_discovery_with_stm32l100rc',
    'board_discovery_with_stm32l152rc',
    'board_discovery_with_stm32l475vg',
    'board_discovery_with_stm32l476vg',
    'board_discovery_with_stm32l496ag',
    'board_discovery_with_stm32l4p5ag',
    'board_discovery_with_stm32l4s5vi',
    'board_easy24_33_v6',
    'board_easyavr_pro_v8',
    'board_easyavr_v7',
    'board_easyavr_v8',
    'board_easymx_pro_v7_for_stm32',
    'board_easymx_pro_v7_for_tiva',
    'board_easypic_fusion_v7',
    'board_easypic_pro_v7',
    'board_easypic_pro_v8',
    'board_easypic_v7',
    'board_easypic_v7_for_dspic30',
    'board_easypic_v8',
    'board_easypic_v8_for_dspic24_33',
    'board_easypic_v8_for_dspic30',
    'board_eval_pic32mz_mxc_data_capture',
    'board_eval_with_stm32f051r8',
    'board_eval_with_stm32f072vb',
    'board_eval_with_stm32f103ze',
    'board_eval_with_stm32f103zg',
    'board_eval_with_stm32f207ig',
    'board_eval_with_stm32f303ve',
    'board_eval_with_stm32f373vc',
    'board_eval_with_stm32f407ig',
    'board_eval_with_stm32f417ig',
    'board_eval_with_stm32f429ni',
    'board_eval_with_stm32f439ni',
    'board_eval_with_stm32f446ze',
    'board_eval_with_stm32f756ng',
    'board_eval_with_stm32f769ni',
    'board_eval_with_stm32g081rb',
    'board_eval_with_stm32g0c1ve',
    'board_eval_with_stm32g474qe',
    'board_eval_with_stm32g484qe',
    'board_eval_with_stm32h743xi',
    'board_eval_with_stm32l073vz',
    'board_eval_with_stm32l476zg',
    'board_eval_with_stm32l4r9ai',
    'board_explorer16_32',
    'board_flowpaw',
    'board_fusion_for_arm_v8',
    'board_fusion_for_kinetis_v8',
    'board_fusion_for_pic32_v8',
    'board_fusion_for_pic_v8',
    'board_fusion_for_stm32_v8',
    'board_fusion_for_tiva_v8',
    'board_hexiwear_battery_pack',
    'board_hexiwear_docking_station',
    'board_hexiwear_workstation',
    'board_micromod_mikrobus_carrier',
    'board_mini_32',
    'board_nucleo_144_with_stm32f207zg',
    'board_nucleo_144_with_stm32f303ze',
    'board_nucleo_144_with_stm32f412zg',
    'board_nucleo_144_with_stm32f413zh',
    'board_nucleo_144_with_stm32f429zi',
    'board_nucleo_144_with_stm32f439zi',
    'board_nucleo_144_with_stm32f446ze',
    'board_nucleo_144_with_stm32f722ze',
    'board_nucleo_144_with_stm32f746zg',
    'board_nucleo_144_with_stm32f756zg',
    'board_nucleo_144_with_stm32f767zi',
    'board_nucleo_144_with_stm32h743zi',
    'board_nucleo_144_with_stm32l496zg',
    'board_nucleo_144_with_stm32l4a6zg',
    'board_nucleo_144_with_stm32l4r5zi',
    'board_nucleo_32_with_stm32f031k6',
    'board_nucleo_32_with_stm32f042k6',
    'board_nucleo_32_with_stm32f303k8',
    'board_nucleo_32_with_stm32g031k8',
    'board_nucleo_32_with_stm32g431kb',
    'board_nucleo_32_with_stm32l011k4',
    'board_nucleo_32_with_stm32l031k6',
    'board_nucleo_32_with_stm32l412kb',
    'board_nucleo_32_with_stm32l432kc',
    'board_nucleo_64_with_stm32c031c6',
    'board_nucleo_64_with_stm32f030r8',
    'board_nucleo_64_with_stm32f070rb',
    'board_nucleo_64_with_stm32f072rb',
    'board_nucleo_64_with_stm32f091rc',
    'board_nucleo_64_with_stm32f103rb',
    'board_nucleo_64_with_stm32f302r8',
    'board_nucleo_64_with_stm32f303re',
    'board_nucleo_64_with_stm32f334r8',
    'board_nucleo_64_with_stm32f401re',
    'board_nucleo_64_with_stm32f410rb',
    'board_nucleo_64_with_stm32f411re',
    'board_nucleo_64_with_stm32f446re',
    'board_nucleo_64_with_stm32g070rb',
    'board_nucleo_64_with_stm32g071rb',
    'board_nucleo_64_with_stm32g0b1re',
    'board_nucleo_64_with_stm32g431rb',
    'board_nucleo_64_with_stm32g474re',
    'board_nucleo_64_with_stm32g491re',
    'board_nucleo_64_with_stm32l053r8',
    'board_nucleo_64_with_stm32l073rz',
    'board_nucleo_64_with_stm32l152re',
    'board_nucleo_64_with_stm32l412rb',
    'board_nucleo_64_with_stm32l433rc',
    'board_nucleo_64_with_stm32l433rc_p',
    'board_nucleo_64_with_stm32l452re',
    'board_nucleo_64_with_stm32l476rg',
    'board_picplc16_v7',
    'board_quail',
    'board_starter_kit_mplab_for_pic32mx1_2',
    'board_starter_kit_pic32mx1_2_5',
    'board_starter_kit_pic32mz_ef_pic32mz2048efm144',
    'board_starter_kit_pic32_bluetooth',
    'board_starter_kit_pic32_ethernet_i',
    'board_starter_kit_pic32_ethernet_ii',
    'board_starter_kit_pic32_usb_ii',
    'board_starter_kit_pic32_usb_iii',
    'board_uni_ds_v8',
    'clicker_2_for_dspic33',
    'clicker_2_for_kinetis',
    'clicker_2_for_pic18fj',
    'clicker_2_for_pic18fk',
    'clicker_2_for_pic24',
    'clicker_2_for_pic32mx',
    'clicker_2_for_pic32mz',
    'clicker_2_for_stm32',
    'clicker_4_for_pic18f',
    'clicker_4_for_stm32',
    'clicker_4_for_stm32f4',
    'clicker_6lowpan',
    'clicker_kinetis',
    'clicker_pic',
    'clicker_pic32mx',
    'clicker_pic32mz',
    'clicker_stm32_m4',
    'clicker_uni'
]

# Runs a shell command and prints the output.
def run_command(command):
    process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
    for line in process.stdout:
        print(line.strip())
    process.wait()
    return process.returncode

def main():
    original_working_dir = os.getcwd()
    print(f"Original working directory: {original_working_dir}")

    os.chdir('/home/runner/')
    print(f"Script executed from: {os.getcwd()}")
    print("Current folder contents")
    for file in os.listdir(os.getcwd()):
        print(file)

    url = os.getenv('NECTO_DOWNLOAD_URL')
    if 'live' in url:
        print("Step 1: Downloading Live NECTOStudio version")
    else:
        print("Step 1: Downloading Development NECTOStudio version")
    urllib.request.urlretrieve(url, "NECTOInstaller.zip")

    print("Step 2: Extract installer")
    run_command("7za x NECTOInstaller.zip")

    print("Step 3: Install NECTO")
    command_install_start = './NECTOInstaller installer --install-packages necto_installer necto_application database mikroe_utils_common preinit unit_test_lib mikrosdk '
    command_packages = ''
    if os.getenv('CARDS') == 'TRUE':
        command_packages += " ".join(card_packages)
    if os.getenv('BOARDS') == 'TRUE':
        command_packages += " ".join(board_packages)
    command_install_end = ' /home/runner/MikroElektronika /home/runner/.MIKROE/NECTOStudio7'
    run_command(command_install_start + command_packages + command_install_end)

    print("Step 4: Move installer to MIKROE if it's generated in root")
    if os.path.isfile("/home/runner/MikroElektronika/installer_tmp"):
        shutil.move("/home/runner/MikroElektronika/installer_tmp", "/home/runner/MikroElektronika/installer")

    print("Step 5: Move instance_uuid.txt to MIKROE if it's generated in root")
    if os.path.isfile("/home/runner/instance_uuid.txt"):
        shutil.move("/home/runner/instance_uuid.txt", "/home/runner/MikroElektronika/instance_uuid.txt")

    print("Step 6: Read hash from instance_uuid.txt")
    with open("/home/runner/MikroElektronika/instance_uuid.txt", "r") as f:
        line = f.readline().strip()

    print("Step 7: Copy NECTOStudio.conf to current directory")
    shutil.copy("/home/runner/.config/MikroElektronika/NECTOStudio.conf", "/home/runner/NECTOStudio.conf")

    print("Step 8: Add the read hash to it")
    with open("/home/runner/NECTOStudio.conf", "r+") as f:
        content = f.read()
        f.seek(0, 0)
        f.write(f"[{line}]\n" + content)

    print("Step 9: Copy it back to .config/MikroElektronika")
    shutil.copy("/home/runner/NECTOStudio.conf", "/home/runner/.config/MikroElektronika/NECTOStudio.conf")

    print("Step 10: Move installed_packages.json to MIKROE if it's generated in root")
    if os.path.isfile("/home/runner/installed_packages.json"):
        shutil.move("/home/runner/installed_packages.json", "/home/runner/MikroElektronika/installed_packages.json")

    print("Step 11: Remove NECTOInstaller.zip")
    os.remove("/home/runner/NECTOInstaller.zip")

    print("Step 12: Remove NECTOInstaller")
    os.remove("/home/runner/NECTOInstaller")

    print("Step 13: Remove NECTOStudio.conf")
    os.remove("/home/runner/NECTOStudio.conf")

    print("Current folder contents")
    for file in os.listdir(os.getcwd()):
        print(file)

    os.chdir(original_working_dir)
    print(f"Returned to original working directory: {os.getcwd()}")

if __name__ == "__main__":
    main()
