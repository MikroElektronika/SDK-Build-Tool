name: Verify NECTO and Package Assets

on:
  workflow_dispatch:

  schedule:
    - cron: "0 4 * * 1-5"   # 06:00, Monday–Friday
    - cron: "0 9 * * 1-5"   # 11:00, Monday–Friday
    - cron: "0 13 * * 1-5"  # 15:00, Monday–Friday

jobs:
  # Install NECTO on different OSs (runs in parallel via matrix)
  necto_verification:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Ubuntu runtime deps
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install p7zip-full
          sudo apt-get install libopus-dev
          sudo apt-get install libevent-dev
          sudo apt-get install freeglut3-dev
          sudo apt-get install libminizip-dev
          sudo apt-get install libxcb-shape0-dev
          sudo apt-get install libxcb-icccm4-dev
          sudo apt-get install libxcb-cursor-dev
          sudo apt-get install libxcb-keysyms1-dev
          sudo apt-get install libxkbcommon-x11-dev

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements/check_necto_links.txt

      - name: Step 1 - Verify NECTO installation
        run: |
          python -u scripts/install_necto_check.py

      - name: Send notification to Mattermost
        if: always() && matrix.os != 'windows-latest'
        env:
          MATTERMOST_WEBHOOK_URL: ${{ secrets.MATTERMOST_WEBHOOK_URL_TEST }}
        run: |
          MESSAGE=$(cat message.txt)
          curl -X POST -H 'Content-Type: application/json' \
          --data "{\"text\": \"$MESSAGE\"}" \
          $MATTERMOST_WEBHOOK_URL

      - name: Send notification to Mattermost (Windows)
        if: always() && matrix.os == 'windows-latest'
        env:
          MATTERMOST_WEBHOOK_URL: ${{ secrets.MATTERMOST_WEBHOOK_URL_TEST }}
        run: |
          $MESSAGE = Get-Content -Raw message.txt
          $WEBHOOK = $env:MATTERMOST_WEBHOOK_URL
          # Build JSON safely (escapes quotes/newlines)
          $payload = @{ text = $MESSAGE } | ConvertTo-Json -Compress
          curl.exe -X POST `
            -H 'Content-Type: application/json' `
            -d $payload `
            $WEBHOOK

  # Verify packages (runs in parallel after build passes)
#   packages_verification:
#     needs: necto_verification
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         packages: [bsp_packages, mchp_programmers, core_packages, codegrip_packages]
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.x'

#       - name: Install Dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r scripts/requirements/check_necto_links.txt

#       - name: Verify packages
#         run: |
#           python -u scripts/check_necto_packages.py ${{ matrix.packages }}
